name: Multi-Platform Compilation

on: [push, pull_request]

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: 
          - x86_64-linux-android
          - armv7-linux-androideabi
          - x86_64-pc-windows-gnu
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
    
    - name: Install Android NDK
      if: contains(matrix.target, 'android')
      uses: nttld/setup-ndk@v1
      with:
        ndk-version: r26b
    
    - name: Prepare Android Build
      if: contains(matrix.target, 'android')
      run: |
        mkdir -p .cargo
        echo '[target.${{ matrix.target }}]
        linker = "${{ matrix.target }}-clang"
        ar = "llvm-ar"' > .cargo/config.toml
      working-directory: cryptg
    
    - name: Build Project
      run: |
        if [[ "${{ matrix.target }}" == *"android"* ]]; then
          cargo install cargo-ndk
          cargo ndk --target ${{ matrix.target }} build --release
        else
          cargo build --target ${{ matrix.target }} --release
        fi
      working-directory: cryptg
    
    - name: Determine Library Extension
      id: lib-ext
      run: |
        if [[ "${{ matrix.target }}" == *"android"* ]]; then
          echo "extension=.so" >> $GITHUB_OUTPUT
        elif [[ "${{ matrix.target }}" == *"windows"* ]]; then
          echo "extension=.dll" >> $GITHUB_OUTPUT
        else
          echo "extension=.so" >> $GITHUB_OUTPUT
        fi
    
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.target }}-library
        path: cryptg/target/${{ matrix.target }}/release/libcryptg${{ steps.lib-ext.outputs.extension }}
        overwrite: true
